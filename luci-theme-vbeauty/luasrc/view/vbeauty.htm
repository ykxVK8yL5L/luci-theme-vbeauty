<%
    local sys  = require "luci.sys"
    local util = require "luci.util"
    local http = require "luci.http"
    local disp = require "luci.dispatcher"

    local boardinfo = util.ubus("system", "board")

    local request  = disp.context.path
    local request2 = disp.context.request

    local category = request[1]
    local cattree  = category and disp.node(category)

    local leaf = request2[#request2]

    local tree = disp.node()
    local node = disp.context.dispatched

    local categories = disp.node_childs(tree)
    local media = luci.config.main.mediaurlbase
    local fs = require "nixio.fs"
    local nutil = require "nixio.util"
    local uci = require 'luci.model.uci'.cursor()

    local c = tree
    local i, r

    -- tag all nodes leading to this page
    for i, r in ipairs(request) do
        if c.nodes and c.nodes[r] then
            c = c.nodes[r]
            c._menu_selected = true
        end
    end

    -- send as HTML5
    http.prepare_content("text/html")

    local function nodeurl(prefix, name, query)
        local u = url(prefix, name)
        if query then
            u = u .. http.build_querystring(query)
        end
        return pcdata(u)
    end


    local function utf8len(str)
        local len = 0
        local currentIndex = 1
        while currentIndex <= #str do
            local char = string.byte(str, currentIndex)
            currentIndex = currentIndex + chsize(char)
            len = len +1
        end
        return len
    end

    local function chsize(char)
        if not char then
            return 0
        elseif char > 240 then
            return 4
        elseif char > 225 then
            return 3
        elseif char > 192 then
            return 2
        else
            return 1
        end    
    end


    local function utf8sub(str, startChar, numChars)
        local startIndex = 1
        while startChar > 1 do
            local char = string.byte(str, startIndex)
            startIndex = startIndex + chsize(char)
            startChar = startChar - 1
        end

        local currentIndex = startIndex
        
        while numChars > 0 and currentIndex <= #str do
            local char = string.byte(str, currentIndex)
            currentIndex = currentIndex + chsize(char)
            numChars = numChars -1
        end
        return str:sub(startIndex, currentIndex - 1)
    end


    local function render_tabmenu(prefix, node, level)
        if not level then
            level = 1
        end

        local childs = disp.node_childs(node)
        if #childs > 0 then
            if level > 2 then
                write('<ul class="tabs">')
            end

            local selected_node
            local selected_name
            local i, v

            for i, v in ipairs(childs) do
                local nnode = node.nodes[v]
                if nnode._menu_selected then
                    selected_node = nnode
                    selected_name = v
                end

                if level > 2 then
                    write('<li class="tabmenu-item-%s %s"><a href="%s">%s</a></li>' %{
                        v, (nnode._menu_selected or (node.leaf and v == leaf)) and 'active' or '',
                        nodeurl(prefix, v, nnode.query),
                        striptags(translate(nnode.title))
                    })
                end
            end

            if level > 2 then
                write('</ul>')
            end

            if selected_node then
                render_tabmenu(prefix .. "/" .. selected_name, selected_node, level + 1)
            end
        end
    end

    local function render_submenu(prefix, node)
        local childs = disp.node_childs(node)
        if #childs > 0 then
            for i, r in ipairs(childs) do
                local nnode = node.nodes[r]
                local title = pcdata(striptags(translate(nnode.title)))
                write('<li><a class="citem"  data-src="%s" style="text-align: center" title="%s"  target="_blank"><span class="textlogo shake" style="background-color:#C41200;color:#ffffff">%s</span><strong>%s</strong></a></li>\n' %{
                    nodeurl(prefix, r, nnode.query),
                    title,
                    utf8sub(title,0,1),
                    utf8sub(title,0,7)
                })
            end
        end
    end


    local function render_topmenu()
        local childs = disp.node_childs(cattree)
        if #childs > 0 then
            for i, r in ipairs(childs) do
                local nnode = cattree.nodes[r]
                local grandchildren = disp.node_childs(nnode)
                if #grandchildren > 0 then
                    local title = pcdata(striptags(translate(nnode.title)))
                    write('<ul>')
                    render_submenu(category .. "/" .. r, nnode)
                     write('</ul>')
                end
            end
        end
    end



    local function render_navmenu()
        local childs = disp.node_childs(cattree)
        if #childs > 0 then
            for i, r in ipairs(childs) do
                local nnode = cattree.nodes[r]
                local grandchildren = disp.node_childs(nnode)

                if #grandchildren > 0 then
                    local title = pcdata(striptags(translate(nnode.title)))
                    -- (nnode._menu_selected) and 'active' or ''
                    write('<a data-title="%s" href="#">%s</a>' %{title,title})
                end
            end
        end
    end






        local function render_logout()
                local childs = disp.node_childs(cattree)
                if #childs > 0 then

                        for i, r in ipairs(childs) do
                                local nnode = cattree.nodes[r]
                                local grandchildren = disp.node_childs(nnode)

                                if #grandchildren <= 0 then
                                        local title = pcdata(striptags(translate(nnode.title)))

                                        write('<a class="float-end" data-title="%s" href="%s">%s</a>' %{
                                                title,
                                                nodeurl(category, r, nnode.query),
                                                title
                                        })
                                end
                        end

                end
        end


    local function render_changes()
        -- calculate the number of unsaved changes
        if tree.nodes[category] and tree.nodes[category].ucidata then
            local ucichanges = 0

            for i, j in pairs(require("luci.model.uci").cursor():changes()) do
                for k, l in pairs(j) do
                    for m, n in pairs(l) do
                        ucichanges = ucichanges + 1;
                    end
                end
            end



            if ucichanges > 0 then
                write('<button type="button" class="btn btn-primary" onclick="openWindow(\'Save Changes\',\'%s?redir=%s\')">%s:<span class="badge bg-secondary">%d</span> </button>' %{
                    url(category, 'uci/changes'),
                    http.urlencode(http.formvalue('redir') or table.concat(disp.context.request, "/")),
                    translate('Unsaved Changes'),
                    ucichanges
                })
            end
        end
    end
-%>

<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
    <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
    <meta content="webkit" name="renderer"/>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"/>
    <link href="favicon.ico" rel="shortcut icon"/>
    <link href="<%=media%>/css/bootstrap.min.css" rel="stylesheet" type="text/css"/>
    <link href="<%=media%>/css/style.css" rel="stylesheet" type="text/css"/>
    <!--减少服务器的资源开销用了cdn,如果想全部使用自己的服务器的jquery,注释cdn的jquery和"js/qieh.js",取消注释"js/jquery.min.js"即可-->
    <script src="<%=media%>/js/jquery.js"></script>
    <script src="<%=media%>/js/particles.min.js"></script>
    <script src="<%=media%>/js/font.js"></script>
    <script src="<%=resource%>/cbi.js"></script>
    <script src="<%=resource%>/xhr.js"></script>
    <script src="<%=media%>/js/jquery.touchSwipe.min.js"></script>
     <script src="<%=media%>/layer/layer.js"></script>
    <title><%=striptags( (boardinfo.hostname or "?") .. ( (node and node.title) and ' - ' .. translate(node.title) or '')) %> -
        LuCI</title>
    <style type="text/css">
        /*背景图设置,设置路径在"css/style.css"下的3315行开始,默认关闭*/
        /*也可以直接打开下面注释直接覆盖原生的渐变色背景,建议打开背景图之后注释原生的3318和3319行渐变色背景样式*/
        body {
            overflow: auto;
            /*background-size: cover;*/
            /*background: url(img/background.jpg) no-repeat;*/
            /*background-attachment: fixed;*/
        }

        #footer {
            height: unset;
        }

        .footer-contents {
            position: unset;
        }

        .footer-contents .links .line {
            margin-top: 20px;
            margin-right: 10px;
            margin-bottom: 10px;
        }

        #app ul:not(:first-of-type){
            display: none;
        }

        /*以下补充样式用于修复手机浏览下的一些体验*/
        @media only screen and (max-width: 479px) {
            div ul li {
                display: flex;
                margin: 0 0 0 0;
            }

            div ul li a {
                width: 100%;
            }

            div ul li a img {
                width: 100%;
            }

            div ul li a strong {
                width: 100%;
            }
        }

        @media only screen and (max-width: 349px) {
            div ul li {
                width: 33.33%;
            }
        }

        @media only screen and (min-width: 350px) and (max-width: 479px) {
            div ul li {
                width: 25%;
            }
        }




/* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Track 
::-webkit-scrollbar-track {
  background: #f1f1f1; 
}
*/
 
/* Handle */
::-webkit-scrollbar-thumb {
  background: #888; 
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; 
}


.navbar a {
  float: left;
  display: block;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 17px;

}

.navbar a:hover {
  background: #f1f1f1;
  color: black;
}

.navbar a.active {
  background-color: #4CAF50;
  color: white;
}



    </style>
</head>
<body>
    <div id="addform" class="card" style="display: none">
        <div class="card-body">
            <h1 class="h1 mb-3 fw-normal">加入常用</h1>
            <div class="form-floating">
              <input type="text" class="form-control" id="shorttitle" placeholder="Shorttitle" value=""/>
              <label for="shorttitle">简称[1个汉字或1个字母]</label>
            </div>
            <div class="form-floating">
              <input type="text" class="form-control" id="addtitle" placeholder="Title" value=""/>
              <label for="addtitle">标题[最佳4个汉字或6个字母]</label>
            </div>
            <div class="form-floating">
              <input type="text" class="form-control" id="addsrc" placeholder="Url"  value=""/>
              <label for="addsrc">常用网址[检查确认即可]</label>
            </div>
             <div class="form-floating">
              <input type="text" class="form-control" id="bcolor" placeholder="Background Color"  value=""/>
              <label for="bcolor">背景色</label>
            </div>
             <div class="form-floating">
              <input type="text" class="form-control" id="fcolor" placeholder="Front Color"  value=""/>
              <label for="bcolor">前景色</label>
            </div>
            <input class="w-100 btn btn-lg btn-primary" type="button" onclick="saveFavourite()" value="保存" />
        </div> 
    </div>
<div id="container">
<div id="particles-js" style="position:absolute; top: 0; z-index: -100; width: 100%;height: 100%;">
    <canvas class="particles-js-canvas-el" height="960" style="width: 100%; height: 100%;" width="1303"></canvas>
</div>
<script>particlesJS("particles-js", {
    particles: {
        number: {
            value: 20,
            density: {
                enable: !0,
                value_area: 1000
            }
        },
        color: {
            value: "#e1e1e1"
        },
        shape: {
            type: "circle",
            stroke: {
                width: 0,
                color: "#000000"
            },
            polygon: {
                nb_sides: 5
            },
            image: {
                src: "img/github.svg",
                width: 100,
                height: 100
            }
        },
        opacity: {
            value: 0.5,
            random: !1,
            anim: {
                enable: !1,
                speed: 1,
                opacity_min: 0.1,
                sync: !1
            }
        },
        size: {
            value: 15,
            random: !0,
            anim: {
                enable: !1,
                speed: 180,
                size_min: 0.1,
                sync: !1
            }
        },
        line_linked: {
            enable: !0,
            distance: 650,
            color: "#cfcfcf",
            opacity: 0.26,
            width: 1
        },
        move: {
            enable: !0,
            speed: 2,
            direction: "none",
            random: !0,
            straight: !1,
            out_mode: "out",
            bounce: !1,
            attract: {
                enable: !1,
                rotateX: 600,
                rotateY: 1200
            }
        }
    },
    interactivity: {
        detect_on: "canvas",
        events: {
            onhover: {
                enable: !1,
                mode: "repulse"
            },
            onclick: {
                enable: !1,
                mode: "push"
            },
            resize: !0
        },
        modes: {
            grab: {
                distance: 400,
                line_linked: {
                    opacity: 1
                }
            },
            bubble: {
                distance: 400,
                size: 40,
                duration: 2,
                opacity: 8,
                speed: 3
            },
            repulse: {
                distance: 200,
                duration: 0.4
            },
            push: {
                particles_nb: 4
            },
            remove: {
                particles_nb: 2
            }
        }
    },
    retina_detect: !0
});</script>
<header class="navbar navbar-dark" style="position:relative;justify-content:unset;padding: 0;overflow-x: hidden;">
    <div class="container-fluid">
            <h3 class="navbar-brand float-start"><%=boardinfo.hostname or "?"%></h3>
            <div class="navbar-nav ml-auto" style="display: inline-block;">
                <% render_changes() %>
                <% render_logout() %>
            </div>
    </div>
</header>
<div id="wrap">
    <div id="main">
        
        <!-- 外网访问地址 -->
        <div class="app animated fadeInLeft" id="app">
            <ul id="favourites"></ul>
            <% render_topmenu() %>
        </div>
        <!-- 内网网访问地址 -->
        <div style="clear: both;"></div>
    </div>
</div>
<div id="footer">
    <div class="footer-contents">
        <div class="links">
            <div class="line">
                <a href="/"></a>&nbsp;&nbsp;&nbsp;
                <span class="footer-link-separator"></span>&nbsp;&nbsp;&nbsp;
                <span class="copyright"></span>
            </div>
        </div>
    </div>
</div>



<div class="navbar nav-footer" style="overflow-x: auto;padding: 0;flex-wrap: nowrap;">
            <a href="#home" class="active">常用</a>
            <% render_navmenu() %>
<!--             <a href="#home" class="active">本地导航</a>
            <a href="#home" class="">常用网站</a> -->
 </div>
</div>
<script type="text/javascript">
var colors = { "#3b5998": "#ffffff",  "#E12F67": "#ffffff",  "#1db954": "#ffffff",  "#1769ff": "#ffffff",  "#cd201f": "#ffffff",  "#1da1f2": "#ffffff","#cc2127": "#ffffff", "#ea4c89": "#ffffff",  "#56B68B": "#ffffff",  "#0077b5": "#ffffff",  "#cc3732": "#ffffff",  "#323232": "#ffffff",  "#F8630E": "#ffffff",  "#F94877": "#ffffff",  "#FFFC00": "#ffffff",  "#0066DC": "#ffffff",  "#25D366": "#ffffff",  "#1ab7ea": "#ffffff",  "#4d75a3": "#ffffff",  "#44546B": "#ffffff",  "#00b489": "#ffffff",  "#006ed2": "#ffffff",  "#ff5700": "#ffffff",  "#05CC47": "#ffffff",  "#C41200": "#ffffff",  "#D51007": "#ffffff",  "#272727": "#ffffff",  "#313131": "#ffffff",  "#FF5A60": "#ffffff",  "#1FBAD6": "#ffffff",  "#2196F3": "#ffffff",  "#FF0000": "#ffffff",  "#0088CC": "#ffffff",  "#007EE5": "#ffffff",  "#2890C3": "#ffffff",  "#1C1B1A": "#ffffff",  "#E62B1E": "#ffffff",  "#ff3366": "#ffffff",  "#52bad5": "#ffffff",  "#263F6A": "#ffffff",  "#79c142": "#ffffff",  "#222222": "#ffffff",  "#008cdd": "#ffffff",  "#A4C639": "#ffffff",  "#00AFF0": "#ffffff",  "#76CC1E": "#ffffff",  "#1D508D": "#ffffff",  "#6ebc6c": "#ffffff",  "#46A5E3": "#ffffff",  "#0050EF": "#ffffff",  "#6441A5": "#ffffff",  "#205081": "#ffffff",  "#DC3D50": "#ffffff",  "#8ba753": "#ffffff",  "#002B5C": "#ffffff",  "#96BF48": "#ffffff",  "#B30838": "#ffffff",  "#000000": "#ffffff",  "#171515": "#ffffff",  "#E12828": "#ffffff",  "#344A5F": "#ffffff",  "#C13832": "#ffffff",  "#1caff6": "#ffffff",  "#9abb70": "#ffffff",  "#19a9e5": "#ffffff",  "#379ECC": "#ffffff",  "#21759b": "#ffffff",  "#ff0000": "#ffffff",  "#DD4814": "#ffffff",  "#2e9fff": "#ffffff",  "#bb0000": "#ffffff",  "#4b9123": "#ffffff",  "#B97A45": "#ffffff",  "#c22026": "#ffffff",  "#f6a006": "#ffffff",  "#2585e5": "#ffffff",  "#45a1ff": "#ffffff",  "#4264fb": "#ffffff",  "#563d7c": "#ffffff"}
    function openWindow(title='',url){
        var index = layer.open({
            title:title,
          type: 2,
          content: url,
          area: ['100%', '100%'],
          maxmin: true
        });
        layer.full(index);
    }

function saveFavourite(){
    var title = $("#addtitle").val();
    var shorttitle = $("#shorttitle").val();
    var src = $("#addsrc").val();
    var bcolor = $("#bcolor").val();
    var fcolor = $("#fcolor").val();

    layer.load();
    $.ajax({
         url:'<%=luci.dispatcher.build_url("admin","status","vbeauty", "addfavourite")%>',
         dataType:'json',
         method:'post',
         data:{
            title:title,
            src:src,
            short:shorttitle,
            bcolor:bcolor,
            fcolor:fcolor
        },
         success:function(r){
            $("#favourites").append("<li><a class=\"fitem\"  data-name=\""+r.msg+"\" style=\"text-align: center\" title=\""+title+"\" data-src=\""+src+"\" target=\"_blank\"><span class=\"textlogo shake\" style=\"background-color:"+bcolor+";color:"+fcolor+"\">"+shorttitle+"</span><strong>"+title+"</strong></a></li>");
             layer.closeAll();
            $("#addtitle").val('');
            $("#shorttitle").val('');
            $("#addsrc").val('');
            $("#bcolor").val('');
            $("#fcolor").val('');
            fBind();
         },
         error:function(XMLHttpRequest, textStatus, errorThrown){
           alert(XMLHttpRequest.status);
           alert(XMLHttpRequest.readyState);
           layer.msg(textStatus);
           }
         });

}

function deleteFavourite(index,name){
    layer.load();
    $.ajax({
         url:'<%=luci.dispatcher.build_url("admin","status","vbeauty", "delfavourite")%>',
         dataType:'json',
         method:'post',
         data:{
            name:name
        },
         success:function(r){
           $('#favourites li').eq(index).remove();
            layer.closeAll();
            fBind();
         },
         error:function(XMLHttpRequest, textStatus, errorThrown){
           alert(XMLHttpRequest.status);
           alert(XMLHttpRequest.readyState);
           layer.msg(textStatus);
           }
         });
}


function getFavourites(){
    var keys = Object.keys(colors);
    layer.load();
   $.ajax({
         url:'<%=luci.dispatcher.build_url("admin","status","vbeauty", "getfavourites")%>',
         dataType:'json',
         method:'post',
         data:{},
         success:function(r){
            $.each(r, function(i,val){
              $("#favourites").append("<li><a class=\"fitem\"  data-name=\""+val.name+"\" style=\"text-align: center\" title=\""+val.title+"\" data-src=\""+val.src+"\" target=\"_blank\"><span class=\"textlogo shake\" style=\"background-color:"+val.bcolor+";color:"+val.fcolor+"\">"+val.short+"</span><strong>"+val.title+"</strong></a></li>");
            });
            layer.closeAll();
            fBind();
         },
         error:function(XMLHttpRequest, textStatus, errorThrown){
           alert(XMLHttpRequest.status);
           alert(XMLHttpRequest.readyState);
           layer.msg(textStatus);
           }
         });
}



function fBind(){
    $(".fitem").swipe("destroy");
    $(".fitem").swipe( {
            tap:function(event, target) {
              var title = $(this).attr('title');
              var src = $(this).attr('data-src');
              openWindow(title,src);
            },
            longTap:function(event, target) {
              var name = $(this).attr('data-name');
              var title = $(this).attr('title');
              var index = $(this).parent().index();
               layer.confirm('您确认要删除？', {
                  btn: ['确定','取消'] //按钮
                }, function(){
                  deleteFavourite(index,name);
                }, function(){
                  
                });
            },
            triggerOnTouchLeave:true,
            threshold:50
      });
}

function cBind(){
     $(".citem").swipe( {
            tap:function(event, target) {
              var title = $(this).attr('title');
              var src = $(this).attr('data-src');
              openWindow(title,src);
            },
            longTap:function(event, target) {
              var keys = Object.keys(colors);
              var randIndex = Math.floor(Math.random() * keys.length);
              var randKey = keys[randIndex];
              var bgcolor = randKey;
              var fcolor = colors[randKey];

              var title = $(this).attr('title');
              var src = $(this).attr('data-src');
              $("#addtitle").val(title);
              $("#addsrc").val(src);
               $("#bcolor").val(bgcolor);
               $("#fcolor").val(fcolor);
               var index = layer.open({
                      title:"加入常用",
                      type: 1,
                      content: $('#addform'),
                      area: ['100%', '100%'],
                      maxmin: true
                    });
            },
            triggerOnTouchLeave:true,
            threshold:50
      });
}



$(function() {
    getFavourites();
    var keys = Object.keys(colors);
     $(".textlogo").each(function(){
        var randIndex = Math.floor(Math.random() * keys.length);
        var randKey = keys[randIndex];
        var bgcolor = randKey;
        var fcolor = colors[randKey];
        $(this).css({"color":fcolor ,"backgroundColor":bgcolor});
    });

    $(".navbar a").click(function() {
        $(this).addClass("active").siblings().removeClass("active");
        $("#app ul").eq($(this).index()).show().siblings().hide();
    })

    $("#container").swipe( {
    //Generic swipe handler for all directions
    swipe:function(event, direction, distance, duration, fingerCount, fingerData) {
        var cindex = $('.nav-footer a.active').index();
        var tlength = $('.nav-footer a').length;
        if(direction=='left'&&cindex<(tlength-1)){
            $('.nav-footer a')[cindex+1].click();
        }
        if(direction=='right'&&cindex>0){
            $('.nav-footer a')[cindex-1].click();
        }
    },
    //Default is 75px, set to 0 for demo so any distance triggers swipe
     threshold:75,
  });
   cBind();
})
</script>
</body>

</html>
